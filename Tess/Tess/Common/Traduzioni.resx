<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Language_pickerTitle" xml:space="preserve">
    <value>Choose language</value>
  </data>
  <data name="Settings_Nothing" xml:space="preserve">
    <value>Nothing to do.</value>
  </data>
  <data name="Settings_picker1" xml:space="preserve">
    <value>Working days in week *</value>
  </data>
  <data name="Settings_picker2" xml:space="preserve">
    <value>Working hours in week *</value>
  </data>
  <data name="Settings_picker3" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="Settings_picker4" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="Settings_pickerDesc" xml:space="preserve">
    <value>If required, the minimun lenght of the break</value>
  </data>
  <data name="Settings_SaveSetKo" xml:space="preserve">
    <value>Working days in week and Working hours in week required!</value>
  </data>
  <data name="Settings_SaveSetOk" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Setting_confirmMessage" xml:space="preserve">
    <value>Are you sure to proceed?</value>
  </data>
  <data name="Setting_confirm_no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Setting_confirm_yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Loading_message" xml:space="preserve">
    <value>Making some stuff... | Round one, fight! |Tthese aren't the droids you're looking for | That is why you fail.|Adventure. Excitement. A Jedi craves not these things|Wars not make one great. | Do. Or do not. There is no try.| Always two there are, no more, no less. A master and an apprentice.|You fail because you don’t believe.</value>
  </data>
  <data name="Main_1opened" xml:space="preserve">
    <value>First close the opened Check-in</value>
  </data>
  <data name="Main_castError" xml:space="preserve">
    <value>Error casting to int</value>
  </data>
  <data name="Main_Closed" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Main_countError" xml:space="preserve">
    <value>openedHours is null or &gt;2</value>
  </data>
  <data name="Main_insert" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Main_insertError" xml:space="preserve">
    <value>Error on insert checkout</value>
  </data>
  <data name="Main_insertError2" xml:space="preserve">
    <value>Error on insert checkin</value>
  </data>
  <data name="Main_moreThan1" xml:space="preserve">
    <value>Error: More than 1 check-in active</value>
  </data>
  <data name="Main_moreThan2" xml:space="preserve">
    <value>Max Check-in / day is 2</value>
  </data>
  <data name="Main_noToClose" xml:space="preserve">
    <value>Nothing to close.</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="About_heading" xml:space="preserve">
    <value>Tess v1.0</value>
  </data>
  <data name="About_text" xml:space="preserve">
    <value>Tess, made by Carlo Camagni. 
Tess is developed in C# and Xamarin, for source code visit https://github.com/camo81/Tess.
You are free to download, modify, destroy or improve it.
Thanks to Material Design Icons (https://materialdesignicons.com/) for in app icons, Pixabay (https://pixabay.com/it/) for menu background, Smashicons on Flaticon (https://www.flaticon.com/authors/smashicons) for the app icon.
And to my daughter Teresa, this app is for you &lt;3.</value>
  </data>
  <data name="Entry_gandalf" xml:space="preserve">
    <value>You shall not pass</value>
  </data>
  <data name="General_GitUri" xml:space="preserve">
    <value>https://github.com/camo81/Tess</value>
  </data>
  <data name="Settings_sound" xml:space="preserve">
    <value>Play sounds</value>
  </data>
  <data name="Detail_l1" xml:space="preserve">
    <value>Worked hours in week</value>
  </data>
  <data name="Detail_l2" xml:space="preserve">
    <value>Day/hours in week</value>
  </data>
  <data name="Detail_l3" xml:space="preserve">
    <value>Reqested week hours</value>
  </data>
  <data name="Detail_l4" xml:space="preserve">
    <value>Working days in week</value>
  </data>
  <data name="Detail_l5" xml:space="preserve">
    <value>Remaining hours</value>
  </data>
  <data name="Main_confirmMessage" xml:space="preserve">
    <value>To proced you must set the required values</value>
  </data>
  <data name="Main_confirm_no" xml:space="preserve">
    <value>Ahr ahr ahr, I'm Pirate Roberts!</value>
  </data>
  <data name="Main_confirm_yes" xml:space="preserve">
    <value>Go to settings page</value>
  </data>
  <data name="Settings_LavoriTroppo" xml:space="preserve">
    <value>You can't work more than 15 hours per day</value>
  </data>
</root>